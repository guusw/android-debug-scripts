# From https://git.aweirdimagination.net/perelman/kill-child-jobs/src/branch/master
#    MIT License
#
#    Copyright (c) <year> <copyright holders>
#
#    Permission is hereby granted, free of charge, to any person obtaining a copy
#    of this software and associated documentation files (the "Software"), to deal
#    in the Software without restriction, including without limitation the rights
#    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#    copies of the Software, and to permit persons to whom the Software is furnished
#    to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice (including the next
#    paragraph) shall be included in all copies or substantial portions of the
#    Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
#    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
#    OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
#    OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

kill_child_jobs() {
    echo "In kill_child_jobs()..."
    # Workaround for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=482999
    tmp="$(mktemp)"
    jobs -p > "$tmp"
    child_pids=$(cat "$tmp")
    for child in $child_pids
    do
        # From https://unix.stackexchange.com/a/574169
        if [ -n "${child##*[!0-9]*}" ]
        then
            echo Killing "$child"
            # From https://stackoverflow.com/a/11231970
            kill "$child" || true
        fi
    done

    # zsh version from https://stackoverflow.com/a/36354483
    # zsh doesn't have jobs -p
    jobs > "$tmp"
    cat "$tmp"
    <"$tmp" sed --regexp-extended --quiet 's/\[([[:digit:]]+)\].*running.*/%\1/gp' | while read -r child
    do
        echo Killing job "$child"
        kill "$child" || true
    done

    rm "$tmp"
}

cleanup() {
    kill_child_jobs
}

setup_child_job_cleanup() {
    # From https://unix.stackexchange.com/a/240736
    for sig in INT QUIT HUP TERM; do
    trap "
        cleanup
        trap - $sig EXIT
        kill -s $sig "'"$$"' "$sig"
    done
    trap cleanup EXIT
}
